{"version":3,"file":"static/js/955.b4696dc5.chunk.js","mappings":"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","sources":["features/Users/usersSelectors.ts","webpack://samurai-way/./src/features/Users/Users.module.css?f6cf","webpack://samurai-way/./src/features/Users/Pagination/Pagination.module.css?e707","features/Users/Pagination/Pagination.tsx","webpack://samurai-way/./src/features/Users/User/User.module.css?e84f","features/Users/User/User.tsx","features/Users/Users.tsx","features/Users/UsersContainer.tsx"],"sourcesContent":["import {AppRootStateType} from '../../app/store';\r\n\r\nexport const selectUsers = (state: AppRootStateType) => state.users\r\nexport const selectUsersPage = (state: AppRootStateType) => state.users.page\r\nexport const selectUsersPageSize = (state: AppRootStateType) => state.users.pageSize\r\n\r\nexport const selectUsersTotalCount = (state: AppRootStateType) => state.users.totalCountUser\r\nexport const selectUsersFollowingProgress = (state: AppRootStateType) => state.users.followingProgress\r\nexport const selectPortionSize = (state: AppRootStateType) => state.users.portionSize\r\n//export const selectUsersItems = (state: AppStateType) => state.users.items","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Users_wrapper__8sGbS\",\"root\":\"Users_root__938dU\",\"container\":\"Users_container__JiVJ3\",\"usersHeader\":\"Users_usersHeader__Mmdr7\",\"title\":\"Users_title__V+0te\",\"users\":\"Users_users__jnina\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__nMcPG\",\"pageNumber\":\"Pagination_pageNumber__MFeL5\",\"selectedPage\":\"Pagination_selectedPage__EKPRV\",\"button\":\"Pagination_button__KyTh9\"};","import React, {FC, useState} from 'react';\r\nimport styles from './Pagination.module.css';\r\n\r\ntype PaginationType = {\r\n    setCurrentPage: (page: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize: number\r\n    currentPage: number\r\n}\r\n\r\nexport const Pagination: FC<PaginationType> = (props) => {\r\n    const {setCurrentPage, totalItemsCount, pageSize, portionSize, currentPage} = props\r\n\r\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / (portionSize || 10)))\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n\r\n    const leftBorderPortionPage = (portionNumber - 1) * portionSize + 1\r\n    const rightBorderPortionPage = portionNumber * portionSize\r\n\r\n    const onClickPrevHandler = () => setPortionNumber(portionNumber - 1)\r\n    const onClickNextHandler = () => setPortionNumber(portionNumber + 1)\r\n    const setCurrentPageHandler = (pageNumber: number) => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n\r\n            {portionNumber > 1 &&\r\n                <button className={styles.button} onClick={onClickPrevHandler}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(page => page >= leftBorderPortionPage && page <= rightBorderPortionPage)\r\n                .map(page => {\r\n                    return (\r\n                        <span key={page}\r\n                              className={currentPage === page ? styles.selectedPage : styles.pageNumber}\r\n                              onClick={() => setCurrentPageHandler(page)}\r\n                        >\r\n                                {page}\r\n                            </span>\r\n                    )\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button className={styles.button} onClick={onClickNextHandler}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"User_container__ophhA\",\"root\":\"User_root__64YXv\",\"userPhoto\":\"User_userPhoto__ONma-\",\"name\":\"User_name__l8H4o\",\"status\":\"User_status__u9nNl\",\"buttonFollow\":\"User_buttonFollow__hfEp8\",\"buttonUnfollow\":\"User_buttonUnfollow__609Zh\"};","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UsersResponseType} from \"../usersReducer\";\r\nimport userAvatar from '../../../common/image/userAvatar.jpg'\r\n\r\ntype UserType = {\r\n    onClickUnfollow: (userID: number) => void\r\n    onClickFollow: (userID: number) => void\r\n    user: UsersResponseType\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const User = (props: UserType) => {\r\n    const {user, followingProgress, onClickFollow, onClickUnfollow} = props\r\n\r\n    let isDisabled = followingProgress.some(id => id === user.id)\r\n    const onClickFollowHandler = (userId: number) => onClickFollow(userId)\r\n    const onClickUnfollowHandler = (userId: number) => onClickUnfollow(userId)\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.root}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={styles.userPhoto}\r\n                         src={user.photos.small ? user.photos.small : userAvatar}\r\n                         alt=\"user-image\"/>\r\n                </NavLink>\r\n                <div className={styles.name}>{user.name}</div>\r\n                <div className={styles.status}>{user.status ? user.status : 'No status'}</div>\r\n                {\r\n                    user.followed\r\n                        ? <button className={styles.buttonUnfollow} disabled={isDisabled} onClick={() => {\r\n                            onClickUnfollowHandler(user.id)\r\n                        }}>Unfollowing</button>\r\n                        : <button className={styles.buttonFollow} disabled={isDisabled} onClick={() => {\r\n                            onClickFollowHandler(user.id)\r\n                        }}>Following</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport {UsersType} from './usersReducer';\r\nimport {Pagination} from \"./Pagination/Pagination\";\r\nimport {User} from \"./User/User\";\r\n\r\ntype UsersPresentPropsType = {\r\n    onClickUnfollow: (userID: number) => void\r\n    onClickFollow: (userID: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    totalCountUser: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersType\r\n    followingProgress: number[]\r\n    portionSize: number\r\n}\r\n\r\nexport const Users = (props: UsersPresentPropsType) => {\r\n    const {\r\n        onClickUnfollow, onClickFollow, followingProgress, users, totalCountUser,\r\n        setCurrentPage, pageSize, portionSize, currentPage\r\n    } = props\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.root}>\r\n                <div className={styles.usersHeader}>\r\n                    <h2 className={styles.title}>Users</h2>\r\n                </div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.users}>\r\n                        {\r\n                            users.items.map(u =>\r\n                                <User key={u.id}\r\n                                      user={u}\r\n                                      followingProgress={followingProgress}\r\n                                      onClickFollow={onClickFollow}\r\n                                      onClickUnfollow={onClickUnfollow}\r\n                                />\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <Pagination currentPage={currentPage}\r\n                                pageSize={pageSize}\r\n                                totalItemsCount={totalCountUser}\r\n                                setCurrentPage={setCurrentPage}\r\n                                portionSize={portionSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {followTC, getUsersTC, setCurrentPageTC, unfollowTC, UsersType} from './usersReducer';\r\nimport React from 'react';\r\nimport {compose} from 'redux';\r\nimport {\r\n    selectPortionSize,\r\n    selectUsers,\r\n    selectUsersFollowingProgress, selectUsersPage,\r\n    selectUsersPageSize,\r\n    selectUsersTotalCount\r\n} from './usersSelectors';\r\nimport {Users} from \"./Users\";\r\n\r\nclass UsersContainer extends React.Component<UsersContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    setCurrentPage = (pageNumber: number) => {\r\n       this.props.setCurrentPage(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    follow = (userId: number) => this.props.follow(userId)\r\n\r\n    unfollow = (userId: number) => this.props.unfollow(userId)\r\n\r\n    render() {\r\n        return <>\r\n            <Users onClickUnfollow={this.unfollow}\r\n                   onClickFollow={this.follow}\r\n                   setCurrentPage={this.setCurrentPage}\r\n                   totalCountUser={this.props.totalCountUser}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   followingProgress={this.props.followingProgress}\r\n                   portionSize={this.props.portionSize}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: selectUsersPageSize(state),\r\n        totalCountUser: selectUsersTotalCount(state),\r\n        currentPage: selectUsersPage(state),\r\n        followingProgress: selectUsersFollowingProgress(state),\r\n        portionSize: selectPortionSize(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {\r\n        follow: followTC,\r\n        unfollow: unfollowTC,\r\n        getUsers: getUsersTC,\r\n        setCurrentPage: setCurrentPageTC\r\n    }))(UsersContainer)\r\n\r\n//types\r\nexport type UsersContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersType\r\n    pageSize: number\r\n    totalCountUser: number\r\n    currentPage: number\r\n    followingProgress: number[]\r\n    portionSize: number\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    getUsers: (page: number, pageSize: number) => void\r\n    setCurrentPage: (pageNumber: number, pageSize: number) => void\r\n}\r\n//вместо ф-ии mapDispatchToProps в connect вторым параметром можно передать объект\r\n//{onClickFollow: followAC, и тд} и тогда connect оборачивает AC в функцию-обертку\r\n// () => store.dispatch(AC)и передаёт в props компонента\r\n\r\n/*const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        onClickFollow: (userID) => dispatch(followAC(userID)),\r\n        onClickUnfollow: (userID) => dispatch(unfollowAC(userID)),\r\n        setUsers: (users) => dispatch(setUsersAC(users)),\r\n        setCurrentPage: (pageNumber) => dispatch(setCurrentPageAC(pageNumber)),\r\n        setTotalUsersCount: (totalCount) => dispatch(setUsersTotalCountAC(totalCount)),\r\n        toggleIsFetching: (isFetching: boolean) => dispatch(isFetchingAC(isFetching))\r\n    }\r\n}*/\r\n// export const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersComponent);"],"names":["selectUsers","state","users","selectUsersPage","page","selectUsersPageSize","pageSize","selectUsersTotalCount","totalCountUser","selectUsersFollowingProgress","followingProgress","selectPortionSize","portionSize","Pagination","props","setCurrentPage","totalItemsCount","currentPage","useState","Math","ceil","portionNumber","setPortionNumber","pagesCount","pages","i","push","portionCount","leftBorderPortionPage","rightBorderPortionPage","className","styles","onClick","filter","map","User","user","onClickFollow","onClickUnfollow","isDisabled","some","id","to","src","photos","small","userAvatar","alt","name","status","followed","disabled","userId","Users","items","u","UsersContainer","pageNumber","follow","unfollow","this","getUsers","React","compose","connect","followTC","unfollowTC","getUsersTC","setCurrentPageTC"],"sourceRoot":""}