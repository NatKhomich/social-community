{"version":3,"file":"static/js/955.a7010f7f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/features/Users/Users.module.css?f6cf","webpack://samurai-way/./src/features/Users/Pagination/Pagination.module.css?e707","features/Users/Pagination/Pagination.tsx","webpack://samurai-way/./src/features/Users/User/User.module.css?e84f","features/Users/User/User.tsx","features/Users/Users.tsx","features/Users/usersSelectors.ts","features/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Users_wrapper__FF1ZH\",\"root\":\"Users_root__bF5Le\",\"container\":\"Users_container__WDZ3q\",\"usersHeader\":\"Users_usersHeader__6gcYH\",\"title\":\"Users_title__oAINR\",\"users\":\"Users_users__k1HYA\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__QEM8h\",\"pageNumber\":\"Pagination_pageNumber__4V1t2\",\"selectedPage\":\"Pagination_selectedPage__RpJM7\",\"button\":\"Pagination_button__-DhRe\"};","import React, {FC, useState} from 'react';\r\nimport styles from './Pagination.module.css';\r\n\r\ntype PaginationType = {\r\n    setCurrentPage: (page: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize: number\r\n    currentPage: number\r\n}\r\n\r\nexport const Pagination: FC<PaginationType> = (props) => {\r\n\r\n    const {setCurrentPage, totalItemsCount, pageSize, portionSize, currentPage} = props\r\n\r\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / (portionSize || 10)))\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n\r\n    //определяем левую и правую границу порции\r\n    const leftBorderPortionPage = (portionNumber - 1) * portionSize + 1\r\n    const rightBorderPortionPage = portionNumber * portionSize\r\n\r\n    const onClickPrevHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n    const onClickNextHandler = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n    }\r\n\r\n    const setCurrentPageHandler = (pageNumber: number) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n\r\n            {portionNumber > 1 &&\r\n                <button className={styles.button} onClick={onClickPrevHandler}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(page => page >= leftBorderPortionPage && page <= rightBorderPortionPage)\r\n                .map(page => {\r\n                    return (\r\n                        <span key={page}\r\n                              className={currentPage === page ? styles.selectedPage : styles.pageNumber}\r\n                              onClick={() => setCurrentPageHandler(page)}\r\n                        >\r\n                                {page}\r\n                            </span>\r\n                    )\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button className={styles.button} onClick={onClickNextHandler}>NEXT</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"User_container__imr2q\",\"root\":\"User_root__8O-s1\",\"userPhoto\":\"User_userPhoto__NNrIM\",\"name\":\"User_name__+Ffkk\",\"status\":\"User_status__nzyaU\",\"buttonFollow\":\"User_buttonFollow__UEsK6\",\"buttonUnfollow\":\"User_buttonUnfollow__DtVyd\"};","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UsersResponseType} from \"../usersReducer\";\r\nimport userAvatar from '../../../common/image/userAvatar.jpg'\r\n\r\ntype UserType = {\r\n    onClickUnfollow: (userID: number) => void\r\n    onClickFollow: (userID: number) => void\r\n    user: UsersResponseType\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const User = (props: UserType) => {\r\n    const {user, followingProgress, onClickFollow, onClickUnfollow} = props\r\n\r\n    let isDisabled = followingProgress.some(id => id === user.id)\r\n    const onClickFollowHandler = (userId: number) => onClickFollow(userId)\r\n    const onClickUnfollowHandler = (userId: number) => onClickUnfollow(userId)\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.root}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={styles.userPhoto}\r\n                         src={user.photos.small ? user.photos.small : userAvatar}\r\n                         alt=\"user-image\"/>\r\n                </NavLink>\r\n                <div className={styles.name}>{user.name}</div>\r\n                <div className={styles.status}>{user.status ? user.status : 'No status'}</div>\r\n                {\r\n                    user.followed\r\n                        ? <button className={styles.buttonUnfollow} disabled={isDisabled} onClick={() => {\r\n                            onClickUnfollowHandler(user.id)\r\n                        }}>Unfollowing</button>\r\n                        : <button className={styles.buttonFollow} disabled={isDisabled} onClick={() => {\r\n                            onClickFollowHandler(user.id)\r\n                        }}>Following</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport {UsersType} from './usersReducer';\r\nimport {Pagination} from \"./Pagination/Pagination\";\r\nimport {User} from \"./User/User\";\r\n\r\ntype UsersPresentPropsType = {\r\n    onClickUnfollow: (userID: number) => void\r\n    onClickFollow: (userID: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    totalCountUser: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersType\r\n    followingProgress: number[]\r\n    portionSize: number\r\n}\r\n\r\nconst Users = (props: UsersPresentPropsType) => {\r\n    const {\r\n        onClickUnfollow,\r\n        onClickFollow,\r\n        followingProgress,\r\n        users,\r\n        totalCountUser,\r\n        setCurrentPage,\r\n        pageSize,\r\n        portionSize,\r\n        currentPage\r\n    } = props\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.root}>\r\n                <div className={styles.usersHeader}>\r\n                    <h2 className={styles.title}>Users</h2>\r\n                </div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.users}>\r\n                        {\r\n                            users.items.map(u =>\r\n                                <User key={u.id}\r\n                                      user={u}\r\n                                      followingProgress={followingProgress}\r\n                                      onClickFollow={onClickFollow}\r\n                                      onClickUnfollow={onClickUnfollow}\r\n                                />\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <Pagination currentPage={currentPage}\r\n                                pageSize={pageSize}\r\n                                totalItemsCount={totalCountUser}\r\n                                setCurrentPage={setCurrentPage}\r\n                                portionSize={portionSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Users;","import {AppRootStateType} from '../../app/store';\r\n\r\nexport const selectUsers = (state: AppRootStateType) => state.users\r\nexport const selectUsersPage = (state: AppRootStateType) => state.users.page\r\nexport const selectUsersPageSize = (state: AppRootStateType) => state.users.pageSize\r\n\r\nexport const selectUsersTotalCount = (state: AppRootStateType) => state.users.totalCountUser\r\nexport const selectUsersFollowingProgress = (state: AppRootStateType) => state.users.followingProgress\r\nexport const selectPortionSize = (state: AppRootStateType) => state.users.portionSize\r\n//export const selectUsersItems = (state: AppStateType) => state.users.items","import {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {followTC, getUsersTC, setCurrentPageTC, unfollowTC, UsersType} from './usersReducer';\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport {compose} from 'redux';\r\nimport {\r\n    selectPortionSize,\r\n    selectUsers,\r\n    selectUsersFollowingProgress, selectUsersPage,\r\n    selectUsersPageSize,\r\n    selectUsersTotalCount\r\n} from './usersSelectors';\r\n\r\nclass UsersContainer extends React.Component<UsersContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    setCurrentPage = (pageNumber: number) => {\r\n       this.props.setCurrentPage(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    follow = (userId: number) => this.props.follow(userId)\r\n\r\n    unfollow = (userId: number) => this.props.unfollow(userId)\r\n\r\n    render() {\r\n        return <>\r\n            <Users onClickUnfollow={this.unfollow}\r\n                   onClickFollow={this.follow}\r\n                   setCurrentPage={this.setCurrentPage}\r\n                   totalCountUser={this.props.totalCountUser}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   followingProgress={this.props.followingProgress}\r\n                   portionSize={this.props.portionSize}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: selectUsersPageSize(state),\r\n        totalCountUser: selectUsersTotalCount(state),\r\n        currentPage: selectUsersPage(state),\r\n        followingProgress: selectUsersFollowingProgress(state),\r\n        portionSize: selectPortionSize(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {\r\n        follow: followTC,\r\n        unfollow: unfollowTC,\r\n        getUsers: getUsersTC,\r\n        setCurrentPage: setCurrentPageTC\r\n    }))(UsersContainer)\r\n\r\n//types\r\nexport type UsersContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersType\r\n    pageSize: number\r\n    totalCountUser: number\r\n    currentPage: number\r\n    followingProgress: number[]\r\n    portionSize: number\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    getUsers: (page: number, pageSize: number) => void\r\n    setCurrentPage: (pageNumber: number, pageSize: number) => void\r\n}\r\n//вместо ф-ии mapDispatchToProps в connect вторым параметром можно передать объект\r\n//{onClickFollow: followAC, и тд} и тогда connect оборачивает AC в функцию-обертку\r\n// () => store.dispatch(AC)и передаёт в props компонента\r\n\r\n/*const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        onClickFollow: (userID) => dispatch(followAC(userID)),\r\n        onClickUnfollow: (userID) => dispatch(unfollowAC(userID)),\r\n        setUsers: (users) => dispatch(setUsersAC(users)),\r\n        setCurrentPage: (pageNumber) => dispatch(setCurrentPageAC(pageNumber)),\r\n        setTotalUsersCount: (totalCount) => dispatch(setUsersTotalCountAC(totalCount)),\r\n        toggleIsFetching: (isFetching: boolean) => dispatch(isFetchingAC(isFetching))\r\n    }\r\n}*/\r\n// export const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersComponent);"],"names":["Pagination","props","setCurrentPage","totalItemsCount","pageSize","portionSize","currentPage","useState","Math","ceil","portionNumber","setPortionNumber","pagesCount","pages","i","push","portionCount","leftBorderPortionPage","rightBorderPortionPage","className","styles","onClick","filter","page","map","User","user","followingProgress","onClickFollow","onClickUnfollow","isDisabled","some","id","to","src","photos","small","userAvatar","alt","name","status","followed","disabled","userId","users","totalCountUser","items","u","selectUsers","state","selectUsersPage","selectUsersPageSize","selectUsersTotalCount","selectUsersFollowingProgress","selectPortionSize","UsersContainer","pageNumber","follow","unfollow","this","getUsers","React","compose","connect","followTC","unfollowTC","getUsersTC","setCurrentPageTC"],"sourceRoot":""}