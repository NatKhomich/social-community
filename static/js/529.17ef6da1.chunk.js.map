{"version":3,"file":"static/js/529.17ef6da1.chunk.js","mappings":"wPACA,EAA0B,uBAA1B,EAAwD,oBAAxD,EAAwF,yBAAxF,EAA+H,2BAA/H,EAAkK,qBAAlK,EAA+L,qB,SCA/L,EAA6B,+BAA7B,EAAyE,+BAAzE,EAAuH,iCAAvH,EAAiK,2B,SCUpJA,EAAiC,SAACC,GAO3C,IANA,IAAOC,EAAuED,EAAvEC,eAAgBC,EAAuDF,EAAvDE,gBAAiBC,EAAsCH,EAAtCG,SAAUC,EAA4BJ,EAA5BI,YAAaC,EAAeL,EAAfK,YAE/D,GAA0CC,EAAAA,EAAAA,UAASC,KAAKC,KAAKH,GAAeD,GAAe,MAA3F,eAAOK,EAAP,KAAsBC,EAAtB,KAEMC,EAAaJ,KAAKC,KAAKN,EAAkBC,GACzCS,EAAQ,GACLC,EAAI,EAAGA,GAAKF,EAAYE,IAC7BD,EAAME,KAAKD,GAGf,IAAME,EAAeR,KAAKC,KAAKG,EAAaP,GAEtCY,GAAyBP,EAAgB,GAAKL,EAAc,EAC5Da,EAAyBR,EAAgBL,EAM/C,OACI,iBAAKc,UAAWC,EAAhB,UAEKV,EAAgB,IACb,mBAAQS,UAAWC,EAAeC,QARnB,kBAAMV,EAAiBD,EAAgB,IAQtD,kBAGHG,EACIS,QAAO,SAAAC,GAAI,OAAIA,GAAQN,GAAyBM,GAAQL,KACxDM,KAAI,SAAAD,GACD,OACI,iBACMJ,UAAWb,IAAgBiB,EAAOH,EAAsBA,EACxDC,QAAS,kBAfmBnB,EAeSqB,IAF3C,SAISA,GAJEA,MAStBP,EAAeN,IACZ,mBAAQS,UAAWC,EAAeC,QAxBnB,kBAAMV,EAAiBD,EAAgB,IAwBtD,sB,8BCvCHe,EAAO,SAACxB,GACjB,IAAOyB,EAA2DzB,EAA3DyB,KAAMC,EAAqD1B,EAArD0B,kBAAmBC,EAAkC3B,EAAlC2B,cAAeC,EAAmB5B,EAAnB4B,gBAE3CC,EAAaH,EAAkBI,MAAK,SAAAC,GAAE,OAAIA,IAAON,EAAKM,MAI1D,OACI,gBAAKb,UAAWC,EAAAA,EAAAA,UAAhB,UACI,iBAAKD,UAAWC,EAAAA,EAAAA,KAAhB,WACI,SAAC,KAAD,CAASa,GAAE,mBAAcP,EAAKM,IAA9B,UACI,gBAAKb,UAAWC,EAAAA,EAAAA,UACXc,IAAKR,EAAKS,OAAOC,MAAQV,EAAKS,OAAOC,MAAQC,EAC7CC,IAAI,kBAEb,gBAAKnB,UAAWC,EAAAA,EAAAA,KAAhB,SAA8BM,EAAKa,QACnC,gBAAKpB,UAAWC,EAAAA,EAAAA,OAAhB,SAAgCM,EAAKc,OAASd,EAAKc,OAAS,cAExDd,EAAKe,UACC,mBAAQtB,UAAWC,EAAAA,EAAAA,eAAuBsB,SAAUZ,EAAYT,QAAS,WAdhE,IAACsB,EAAAA,EAeejB,EAAKM,GAfDH,EAAgBc,IAc7C,0BAGA,mBAAQxB,UAAWC,EAAAA,EAAAA,aAAqBsB,SAAUZ,EAAYT,QAAS,WAlBhE,IAACsB,EAAAA,EAmBejB,EAAKM,GAnBDJ,EAAce,IAkBzC,6B,wCClC1B,EAA6B,mCCUhBC,EAAiB,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,YAExCC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,KAAM,GACNC,QAAQ,GAEZC,SAAU,SAAAC,GACNR,EAAiBQ,EAAOH,KAAMG,EAAOF,WAI7C,OACI,iBAAMC,SAAUL,EAAOO,aAAvB,UACI,iBAAKnC,UAAWoC,EAAhB,WACI,SAACC,EAAA,GAAD,QAAWC,KAAK,OACLC,MAAM,OACNC,OAAO,SACPC,KAAK,SACDb,EAAOc,cAAc,WAGpC,SAACC,EAAA,EAAD,CAAQpB,SAAiC,KAAvBK,EAAOM,OAAOH,KACxBO,KAAM,SAAUM,QAAS,WACzBC,MAAO,YACPC,GAAI,CAACN,OAAQ,eAHrB,qBAOA,SAACG,EAAA,EAAD,CAAQL,KAAM,SAAUM,QAAS,WACzBC,MAAO,YACPC,GAAI,CAACN,OAAQ,eACbtC,QAAS,kBAAMyB,EAAY,OAHnC,kBAQA,SAACgB,EAAA,EAAD,CAAQL,KAAM,SAAUM,QAAS,WACzBC,MAAO,YACPC,GAAI,CAACN,OAAQ,eACbtC,QAAS,kBAAMyB,GAAY,IAHnC,2BC3BHoB,EAAQ,SAACjE,GAClB,IACI4B,EAEA5B,EAFA4B,gBAAiBD,EAEjB3B,EAFiB2B,cAAeD,EAEhC1B,EAFgC0B,kBAAmBwC,EAEnDlE,EAFmDkE,MAAOC,EAE1DnE,EAF0DmE,eAC1DlE,EACAD,EADAC,eAAgBE,EAChBH,EADgBG,SAAUC,EAC1BJ,EAD0BI,YAAaC,EACvCL,EADuCK,YAAauC,EACpD5C,EADoD4C,iBAAkBC,EACtE7C,EADsE6C,YAG1E,OACI,oBAAS3B,UAAWC,EAApB,UACI,iBAAKD,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,oBACA,SAACwB,EAAD,CAAgBC,iBAAkBA,EAAkBC,YAAaA,QAErE,iBAAK3B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK+C,EAAME,MAAM7C,KAAI,SAAA8C,GAAC,OACV,SAAC7C,EAAD,CACMC,KAAM4C,EACN3C,kBAAmBA,EACnBC,cAAeA,EACfC,gBAAiBA,GAJZyC,EAAEtC,UAQzB,SAAChC,EAAD,CAAYM,YAAaA,EACbF,SAAUA,EACVD,gBAAiBiE,EACjBlE,eAAgBA,EAChBG,YAAaA,aClCvCkE,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoBD,OApBCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAMFrE,eAAiB,SAACsE,GACd,EAAKvE,MAAMC,eAAesE,EAAY,EAAKvE,MAAMG,SAAU,EAAKH,MAAMwE,aACzE,EAEDC,OAAS,SAAC/B,GAAD,OAAoB,EAAK1C,MAAMyE,OAAO/B,IAAtC,EAETgC,SAAW,SAAChC,GAAD,OAAoB,EAAK1C,MAAM0E,SAAShC,IAAxC,EAEXE,iBAAmB,SAACK,EAAcC,GAC9B,EAAKlD,MAAM2E,SAAS,EAAG,EAAK3E,MAAMG,SAAU8C,EAAMC,IACrD,EAEDL,YAAc,SAACK,GACX,EAAKlD,MAAM2E,SAAS,EAAG,EAAK3E,MAAMG,SAAU,GAAI+C,IACnD,EAeA,OAfA,yCAlBD,WACI0B,KAAK5E,MAAM2E,SAASC,KAAK5E,MAAMK,YAAauE,KAAK5E,MAAMG,SAAU,GAAI,QACxE,oBAkBD,WACI,OAAO,SAAC8D,EAAD,CAAOrC,gBAAiBgD,KAAKF,SACtB/C,cAAeiD,KAAKH,OACpBxE,eAAgB2E,KAAK3E,eACrBkE,eAAgBS,KAAK5E,MAAMmE,eAC3BhE,SAAUyE,KAAK5E,MAAMG,SACrBE,YAAauE,KAAK5E,MAAMK,YACxB6D,MAAOU,KAAK5E,MAAMkE,MAClBxC,kBAAmBkD,KAAK5E,MAAM0B,kBAC9BtB,YAAawE,KAAK5E,MAAMI,YACxBwC,iBAAkBgC,KAAKhC,iBACvBC,YAAa+B,KAAK/B,kBAEnC,EAnCCyB,CAAuBO,EAAAA,WAkD7B,GAAeC,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAZpB,SAACC,GACrB,MAAO,CACHd,OAAOe,EAAAA,EAAAA,IAAYD,GACnB7E,UAAU+E,EAAAA,EAAAA,IAAoBF,GAC9Bb,gBAAgBgB,EAAAA,EAAAA,IAAsBH,GACtC3E,aAAa+E,EAAAA,EAAAA,IAAgBJ,GAC7BtD,mBAAmB2D,EAAAA,EAAAA,IAA6BL,GAChD5E,aAAakF,EAAAA,EAAAA,IAAkBN,GAC/BR,YAAYe,EAAAA,EAAAA,IAAiBP,MAKjC,CACIP,OAAQe,EAAAA,GACRd,SAAUe,EAAAA,GACVd,SAAUe,EAAAA,GACVzF,eAAgB0F,EAAAA,GAChBC,UAAWC,EAAAA,KANnB,CAOQvB,I,8NCtED,IAAMW,EAAc,SAACD,GAAD,OAA6BA,EAAMd,OACjD4B,EAAmB,SAACd,GAAD,OAA6BA,EAAMd,MAAME,OAC5DgB,EAAkB,SAACJ,GAAD,OAA6BA,EAAMd,MAAM5C,MAC3D4D,EAAsB,SAACF,GAAD,OAA6BA,EAAMd,MAAM/D,UAE/DgF,EAAwB,SAACH,GAAD,OAA6BA,EAAMd,MAAMC,gBACjEkB,EAA+B,SAACL,GAAD,OAA6BA,EAAMd,MAAMxC,mBACxE4D,EAAoB,SAACN,GAAD,OAA6BA,EAAMd,MAAM9D,aAC7DmF,EAAmB,SAACP,GAAD,OAA6BA,EAAMd,MAAM7C,OAAO4B,O,mBCThF,KAAgB,UAAY,wBAAwB,KAAO,mBAAmB,UAAY,wBAAwB,KAAO,mBAAmB,OAAS,qBAAqB,aAAe,2BAA2B,eAAiB,+B","sources":["webpack://samurai-way/./src/features/Users/Users.module.css?f6cf","webpack://samurai-way/./src/features/Users/Pagination/Pagination.module.css?e707","features/Users/Pagination/Pagination.tsx","features/Users/User/User.tsx","webpack://samurai-way/./src/features/Users/UserSearchForm/UserSearchForm.module.css?e669","features/Users/UserSearchForm/UserSearchForm.tsx","features/Users/Users.tsx","features/Users/UsersContainer.tsx","features/Users/usersSelectors.ts","webpack://samurai-way/./src/features/Users/User/User.module.css?e84f"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Users_wrapper__8sGbS\",\"root\":\"Users_root__938dU\",\"container\":\"Users_container__JiVJ3\",\"usersHeader\":\"Users_usersHeader__Mmdr7\",\"title\":\"Users_title__V+0te\",\"users\":\"Users_users__jnina\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__nMcPG\",\"pageNumber\":\"Pagination_pageNumber__MFeL5\",\"selectedPage\":\"Pagination_selectedPage__EKPRV\",\"button\":\"Pagination_button__KyTh9\"};","import React, {FC, useState} from 'react';\r\nimport styles from './Pagination.module.css';\r\n\r\ntype PaginationType = {\r\n    setCurrentPage: (page: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize: number\r\n    currentPage: number\r\n}\r\n\r\nexport const Pagination: FC<PaginationType> = (props) => {\r\n    const {setCurrentPage, totalItemsCount, pageSize, portionSize, currentPage} = props\r\n\r\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / (portionSize || 10)))\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n\r\n    const leftBorderPortionPage = (portionNumber - 1) * portionSize + 1\r\n    const rightBorderPortionPage = portionNumber * portionSize\r\n\r\n    const onClickPrevHandler = () => setPortionNumber(portionNumber - 1)\r\n    const onClickNextHandler = () => setPortionNumber(portionNumber + 1)\r\n    const setCurrentPageHandler = (pageNumber: number) => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n\r\n            {portionNumber > 1 &&\r\n                <button className={styles.button} onClick={onClickPrevHandler}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(page => page >= leftBorderPortionPage && page <= rightBorderPortionPage)\r\n                .map(page => {\r\n                    return (\r\n                        <span key={page}\r\n                              className={currentPage === page ? styles.selectedPage : styles.pageNumber}\r\n                              onClick={() => setCurrentPageHandler(page)}\r\n                        >\r\n                                {page}\r\n                            </span>\r\n                    )\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button className={styles.button} onClick={onClickNextHandler}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UsersResponseType} from \"../usersReducer\";\r\nimport userAvatar from '../../../common/image/userAvatar.jpg'\r\n\r\ntype UserType = {\r\n    onClickUnfollow: (userID: number) => void\r\n    onClickFollow: (userID: number) => void\r\n    user: UsersResponseType\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const User = (props: UserType) => {\r\n    const {user, followingProgress, onClickFollow, onClickUnfollow} = props\r\n\r\n    let isDisabled = followingProgress.some(id => id === user.id)\r\n    const onClickFollowHandler = (userId: number) => onClickFollow(userId)\r\n    const onClickUnfollowHandler = (userId: number) => onClickUnfollow(userId)\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.root}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={styles.userPhoto}\r\n                         src={user.photos.small ? user.photos.small : userAvatar}\r\n                         alt=\"user-image\"/>\r\n                </NavLink>\r\n                <div className={styles.name}>{user.name}</div>\r\n                <div className={styles.status}>{user.status ? user.status : 'No status'}</div>\r\n                {\r\n                    user.followed\r\n                        ? <button className={styles.buttonUnfollow} disabled={isDisabled} onClick={() => {\r\n                            onClickUnfollowHandler(user.id)\r\n                        }}>Unfollowing</button>\r\n                        : <button className={styles.buttonFollow} disabled={isDisabled} onClick={() => {\r\n                            onClickFollowHandler(user.id)\r\n                        }}>Following</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"UserSearchForm_buttonForm__03y1+\"};","import React from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {useFormik} from \"formik\";\r\nimport s from './UserSearchForm.module.css'\r\n\r\ntype Props = {\r\n    onSearchTermForm: (term: string, friend: boolean | null) => void\r\n    onlyFriends: (friend: boolean | null) => void\r\n}\r\n\r\nexport const UserSearchForm = ({onSearchTermForm, onlyFriends}: Props) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            term: '',\r\n            friend: false as boolean | null\r\n        },\r\n        onSubmit: values => {\r\n            onSearchTermForm(values.term, values.friend)\r\n        },\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={s.buttonForm}>\r\n                <TextField type=\"term\"\r\n                           label=\"name\"\r\n                           margin=\"normal\"\r\n                           size='small'\r\n                           {...formik.getFieldProps('term')}\r\n                />\r\n\r\n                <Button disabled={formik.values.term === ''}\r\n                        type={'submit'} variant={'outlined'}\r\n                        color={'secondary'}\r\n                        sx={{margin: '8px 0 0 5px'}}>\r\n                    Search\r\n                </Button>\r\n\r\n                <Button type={'submit'} variant={'outlined'}\r\n                        color={'secondary'}\r\n                        sx={{margin: '8px 0 0 5px'}}\r\n                        onClick={() => onlyFriends(null)}\r\n                >\r\n                   All\r\n                </Button>\r\n\r\n                <Button type={'submit'} variant={'outlined'}\r\n                        color={'secondary'}\r\n                        sx={{margin: '8px 0 0 5px'}}\r\n                        onClick={() => onlyFriends(true)}\r\n                >\r\n                    Friends\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport {UsersType} from './usersReducer';\r\nimport {Pagination} from \"./Pagination/Pagination\";\r\nimport {User} from \"./User/User\";\r\nimport {UserSearchForm} from \"./UserSearchForm/UserSearchForm\";\r\n\r\ntype UsersPresentPropsType = {\r\n    onClickUnfollow: (userID: number) => void\r\n    onClickFollow: (userID: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    totalCountUser: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersType\r\n    followingProgress: number[]\r\n    portionSize: number\r\n    onSearchTermForm: (term: string, friend: boolean | null) => void\r\n    onlyFriends: (friend: boolean | null) => void\r\n}\r\n\r\nexport const Users = (props: UsersPresentPropsType) => {\r\n    const {\r\n        onClickUnfollow, onClickFollow, followingProgress, users, totalCountUser,\r\n        setCurrentPage, pageSize, portionSize, currentPage, onSearchTermForm, onlyFriends\r\n    } = props\r\n\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <div className={styles.root}>\r\n                <div className={styles.usersHeader}>\r\n                    <h2 className={styles.title}>Users</h2>\r\n                    <UserSearchForm onSearchTermForm={onSearchTermForm} onlyFriends={onlyFriends} />\r\n                </div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.users}>\r\n                        {users.items.map(u =>\r\n                                <User key={u.id}\r\n                                      user={u}\r\n                                      followingProgress={followingProgress}\r\n                                      onClickFollow={onClickFollow}\r\n                                      onClickUnfollow={onClickUnfollow}\r\n                                />\r\n                            )}\r\n                    </div>\r\n                    <Pagination currentPage={currentPage}\r\n                                pageSize={pageSize}\r\n                                totalItemsCount={totalCountUser}\r\n                                setCurrentPage={setCurrentPage}\r\n                                portionSize={portionSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};","import {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {followTC, getUsersTC, setCurrentPageTC, setFilterAC, unfollowTC, UsersType} from './usersReducer';\r\nimport React from 'react';\r\nimport {compose} from 'redux';\r\nimport {\r\n    selectFilterTerm,\r\n    selectPortionSize,\r\n    selectUsers,\r\n    selectUsersFollowingProgress, selectUsersPage,\r\n    selectUsersPageSize,\r\n    selectUsersTotalCount\r\n} from './usersSelectors';\r\nimport {Users} from \"./Users\";\r\n\r\nclass UsersContainer extends React.Component<UsersContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize, '', null)\r\n    }\r\n\r\n    setCurrentPage = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber, this.props.pageSize, this.props.filterTerm)\r\n    }\r\n\r\n    follow = (userId: number) => this.props.follow(userId)\r\n\r\n    unfollow = (userId: number) => this.props.unfollow(userId)\r\n\r\n    onSearchTermForm = (term: string, friend: boolean | null) => {\r\n        this.props.getUsers(1, this.props.pageSize, term, friend)\r\n    }\r\n\r\n    onlyFriends = (friend: boolean | null) => {\r\n        this.props.getUsers(1, this.props.pageSize, '', friend)\r\n    }\r\n\r\n    render() {\r\n        return <Users onClickUnfollow={this.unfollow}\r\n                      onClickFollow={this.follow}\r\n                      setCurrentPage={this.setCurrentPage}\r\n                      totalCountUser={this.props.totalCountUser}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      users={this.props.users}\r\n                      followingProgress={this.props.followingProgress}\r\n                      portionSize={this.props.portionSize}\r\n                      onSearchTermForm={this.onSearchTermForm}\r\n                      onlyFriends={this.onlyFriends}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: selectUsersPageSize(state),\r\n        totalCountUser: selectUsersTotalCount(state),\r\n        currentPage: selectUsersPage(state),\r\n        followingProgress: selectUsersFollowingProgress(state),\r\n        portionSize: selectPortionSize(state),\r\n        filterTerm: selectFilterTerm(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {\r\n        follow: followTC,\r\n        unfollow: unfollowTC,\r\n        getUsers: getUsersTC,\r\n        setCurrentPage: setCurrentPageTC,\r\n        setFilter: setFilterAC\r\n    }))(UsersContainer)\r\n\r\n//types\r\nexport type UsersContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersType\r\n    pageSize: number\r\n    totalCountUser: number\r\n    currentPage: number\r\n    followingProgress: number[]\r\n    portionSize: number\r\n    filterTerm: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    getUsers: (page: number, pageSize: number, term: string, friend: boolean | null) => void\r\n    setCurrentPage: (pageNumber: number, pageSize: number, term: string) => void\r\n    setFilter: (term: string) => void\r\n}\r\n//вместо ф-ии mapDispatchToProps в connect вторым параметром можно передать объект\r\n//{onClickFollow: followAC, и тд} и тогда connect оборачивает AC в функцию-обертку\r\n// () => store.dispatch(AC)и передаёт в props компонента\r\n\r\n/*const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        onClickFollow: (userID) => dispatch(followAC(userID)),\r\n        onClickUnfollow: (userID) => dispatch(unfollowAC(userID)),\r\n        setUsers: (users) => dispatch(setUsersAC(users)),\r\n        setCurrentPage: (pageNumber) => dispatch(setCurrentPageAC(pageNumber)),\r\n        setTotalUsersCount: (totalCount) => dispatch(setUsersTotalCountAC(totalCount)),\r\n        toggleIsFetching: (isFetching: boolean) => dispatch(isFetchingAC(isFetching))\r\n    }\r\n}*/\r\n// export const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersComponent);","import {AppRootStateType} from '../../app/store';\r\n\r\nexport const selectUsers = (state: AppRootStateType) => state.users\r\nexport const selectUsersItems = (state: AppRootStateType) => state.users.items\r\nexport const selectUsersPage = (state: AppRootStateType) => state.users.page\r\nexport const selectUsersPageSize = (state: AppRootStateType) => state.users.pageSize\r\n\r\nexport const selectUsersTotalCount = (state: AppRootStateType) => state.users.totalCountUser\r\nexport const selectUsersFollowingProgress = (state: AppRootStateType) => state.users.followingProgress\r\nexport const selectPortionSize = (state: AppRootStateType) => state.users.portionSize\r\nexport const selectFilterTerm = (state: AppRootStateType) => state.users.filter.term\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"User_container__ophhA\",\"root\":\"User_root__64YXv\",\"userPhoto\":\"User_userPhoto__ONma-\",\"name\":\"User_name__l8H4o\",\"status\":\"User_status__u9nNl\",\"buttonFollow\":\"User_buttonFollow__hfEp8\",\"buttonUnfollow\":\"User_buttonUnfollow__609Zh\"};"],"names":["Pagination","props","setCurrentPage","totalItemsCount","pageSize","portionSize","currentPage","useState","Math","ceil","portionNumber","setPortionNumber","pagesCount","pages","i","push","portionCount","leftBorderPortionPage","rightBorderPortionPage","className","styles","onClick","filter","page","map","User","user","followingProgress","onClickFollow","onClickUnfollow","isDisabled","some","id","to","src","photos","small","userAvatar","alt","name","status","followed","disabled","userId","UserSearchForm","onSearchTermForm","onlyFriends","formik","useFormik","initialValues","term","friend","onSubmit","values","handleSubmit","s","TextField","type","label","margin","size","getFieldProps","Button","variant","color","sx","Users","users","totalCountUser","items","u","UsersContainer","pageNumber","filterTerm","follow","unfollow","getUsers","this","React","compose","connect","state","selectUsers","selectUsersPageSize","selectUsersTotalCount","selectUsersPage","selectUsersFollowingProgress","selectPortionSize","selectFilterTerm","followTC","unfollowTC","getUsersTC","setCurrentPageTC","setFilter","setFilterAC","selectUsersItems"],"sourceRoot":""}