{"version":3,"file":"static/js/13.746bdc8d.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/common/components/TextForm/TextForm.module.css?1b8d","common/components/TextForm/TextForm.tsx","common/hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://samurai-way/./src/features/Messenger/Messenger.module.css?063e","webpack://samurai-way/./src/features/Messenger/DialogItem/DialogItem.module.css?b0d1","features/Messenger/DialogItem/DialogItem.tsx","webpack://samurai-way/./src/features/Messenger/MessageItem/Message.module.css?6def","features/Messenger/MessageItem/MessageItem.tsx","features/Messenger/Messenger.tsx","features/Messenger/messengerSelectors.ts","features/Messenger/MessengerContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TextForm_form__FSNI1\",\"textarea\":\"TextForm_textarea__weHbY\",\"buttonBlock\":\"TextForm_buttonBlock__GjfIg\",\"button\":\"TextForm_button__omJa3\"};","import {useFormik} from 'formik';\r\nimport React from 'react';\r\nimport styles from './TextForm.module.css'\r\n\r\nexport const TextForm = (props: TextFormType) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: ''\r\n        },\r\n        onSubmit: values => {\r\n            props.callback(values)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    return <form className={styles.form} onSubmit={formik.handleSubmit}>\r\n                <textarea className={styles.textarea}\r\n                          {...formik.getFieldProps('text')}\r\n                />\r\n\r\n        <div className={styles.buttonBlock}>\r\n            <button className={styles.button}>{props.name}</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\n//types\r\nexport type TextFormType = {\r\n    callback: (text: DataTextFormType) => void\r\n    name: string\r\n}\r\n\r\nexport type DataTextFormType = {\r\n    text: string\r\n}","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\n\r\ntype MapStateToPropsType = {\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        isLoggedIn: state.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isLoggedIn, ...restProps} = props\r\n        if (!isLoggedIn) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Messenger_root__u9dLg\",\"messages\":\"Messenger_messages__9LhiN\",\"messageField\":\"Messenger_messageField__8RH9o\",\"dialogItemElement\":\"Messenger_dialogItemElement__W5wgz\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DialogItem_root__bdHHi\",\"title\":\"DialogItem_title__5NuHL\",\"item\":\"DialogItem_item__iJzww\",\"itemImage\":\"DialogItem_itemImage__+++ia\",\"itemAvatar\":\"DialogItem_itemAvatar__np6XU\",\"userAndMessage\":\"DialogItem_userAndMessage__Gd-kh\",\"userName\":\"DialogItem_userName__q+eR6\",\"userMessage\":\"DialogItem_userMessage__zi7zT\"};","import {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {DialogType} from \"../messengerReducer\";\r\n\r\n\r\n\r\nexport const DialogItem = (props: DialogType) => {\r\n    const {id, name, avatar} = props\r\n\r\n    let path = `/dialogs/${id}`\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <NavLink key={id} to={path}>\r\n                <li className={styles.item}>\r\n                    <div className={styles.itemImage}>\r\n                        <img className={styles.itemAvatar} src={avatar} alt=\"contact-avatar\"/>\r\n                    </div>\r\n                    <div className={styles.userAndMessage}>\r\n                        <div className={styles.userName}>\r\n                            {`${name}`}\r\n                        </div>\r\n                        <div className={styles.userMessage}>\r\n                            'Lorem Ipsum is simply dummy text of the printing and typesetting industry'\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Message_root__4o4RH\",\"message\":\"Message_message__uupAz\"};","import React from 'react';\r\nimport styles from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\n\r\nexport const MessageItem = (props: PropsType) => {\r\n    const { message } = props;\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <div className={styles.message}>{message}</div>\r\n        </div>\r\n    );\r\n};","import styles from './Messenger.module.css';\r\nimport React from 'react';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {MessengerContainerType} from './MessengerContainer';\r\nimport {MessageItem} from './MessageItem/MessageItem';\r\nimport {DataTextFormType, TextForm} from '../../common/components/TextForm/TextForm';\r\n\r\n\r\nexport const Messenger = (props: MessengerContainerType) => {\r\n    const {dialogs, messages, sendMessage} = props\r\n\r\n    const messageElement = messages.map(el => <MessageItem key={el.id} message={el.message}/>)\r\n    const dialogItemElement = dialogs.map(el => <DialogItem key={el.id} name={el.name} id={el.id} avatar={el.avatar}/>)\r\n\r\n    const sendMassageHandler = (newMessage: DataTextFormType) => {\r\n        if (newMessage.text !== '') {\r\n            sendMessage(newMessage.text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.root}>\r\n                <div className={styles.dialogItemElement}> {dialogItemElement} </div>\r\n\r\n                <div className={styles.messages}>{messageElement}</div>\r\n            </div>\r\n            <div className={styles.messageField}>\r\n                <TextForm callback={sendMassageHandler} name={'Send'}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import {AppRootStateType} from '../../app/store';\r\n\r\nexport const selectMessengerDialogs = (state: AppRootStateType) => state.dialogs.dialogs\r\nexport const selectMessengerMessages = (state: AppRootStateType) => state.dialogs.messages","import React from 'react';\r\nimport {DialogType, MessageType, sendMessageAC} from './messengerReducer';\r\nimport {Messenger} from './Messenger';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {withAuthRedirect} from '../../common/hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {selectMessengerDialogs, selectMessengerMessages} from './messengerSelectors';\r\n\r\n\r\nconst MessengerContainer = (props: MessengerContainerType) => {\r\n    return (\r\n        <Messenger dialogs={props.dialogs} messages={props.messages} sendMessage={props.sendMessage} />\r\n    )\r\n}\r\n\r\nexport type MessengerContainerType = MapStateToPropsType & MapDispatchToPropsType\r\ntype MapStateToPropsType = {\r\n    dialogs: DialogType[]\r\n    messages: MessageType[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: (newMessage: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogs: selectMessengerDialogs(state),\r\n        messages: selectMessengerMessages(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            sendMessage: sendMessageAC,\r\n        }),\r\n    withAuthRedirect\r\n)(MessengerContainer)\r\n\r\n"],"names":["TextForm","props","formik","useFormik","initialValues","text","onSubmit","values","callback","resetForm","className","styles","handleSubmit","getFieldProps","name","mapStateToProps","state","isLoggedIn","auth","withAuthRedirect","Component","connect","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","to","DialogItem","id","avatar","path","src","alt","MessageItem","message","Messenger","dialogs","messages","sendMessage","messageElement","map","el","dialogItemElement","newMessage","selectMessengerDialogs","selectMessengerMessages","compose","sendMessageAC"],"sourceRoot":""}